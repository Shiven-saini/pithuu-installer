efi:
    mountPoint:         "/boot/efi"
    recommendedSize:    512MiB
    minimumSize:        32MiB
    label:              "EFI"

userSwapChoices:
    - none      # Create no swap, use no swap
    - small     # Up to 4GB
    - suspend   # At least main memory size
    - file      # To swap file instead of partition

swapPartitionName:      swap

drawNestedPartitions:   false

alwaysShowPartitionLabels: true

allowManualPartitioning:   true

initialPartitioningChoice: none

initialSwapChoice: none

defaultPartitionTableType: gpt

defaultFileSystemType:  "ext4"

availableFileSystemTypes: ["ext4", "btrfs", "xfs"]

# Selectable filesystem type, used when "erase" is done.
#
# When erasing the disk, the *defaultFileSystemType* is used (see
# above), but it is also possible to give users a choice:
# list suitable filesystems here. A drop-down is provided
# to pick which is the filesystems will be used.
#
# The value *defaultFileSystemType* is added to this list (with a warning)
# if not present; the default pick is the *defaultFileSystemType*.
#
# If not specified at all, uses *defaultFileSystemType* without a
# warning (this matches traditional no-choice-available behavior best).
# availableFileSystemTypes:  ["ext4","f2fs"]

# Per-directory filesystem restrictions.
#
# This optional setting specifies what filesystems the user can and cannot use
# for various directories and mountpoints when using manual partitioning.
#
# If nothing is specified, the only restriction enforced by default is that
# the EFI system partition must use the fat32 filesystem.
#
# Otherwise, the filesystem restrictions are defined as follow:
#
# directoryFilesystemRestrictions:
#     - directory: "any"
#       allowedFilesystemTypes: ["all"]
#     - directory: "/"
#       allowedFilesystemTypes: ["ext4","xfs","btrfs","jfs","f2fs"]
#     - mountpoint: "efi"
#       allowedFilesystemTypes: ["fat32"]
#       onlyWhenMountpoint: true
#
# There can be any number of mountpoints listed, each entry having the
# following attributes:
#   - mountpoint: mountpoint's full path
#                 or
#                 "any" to specify a global whitelist that applies to all
#                 mountpoints
#                 or
#                 "efi" to specify a whitelist specific to the EFI system
#                 partition, wherever that partition is located
#   - allowedFilesystemTypes: the list of all filesystems valid for this
#                             mountpoint. If the list contains exactly one
#                             element, and that element is the special value
#                             "any", all filesystem types recognized by
#                             Calamares will be allowed.
#   - onlyWhenMountpoint: Whether the restriction should apply only when the
#                         specified directory is a mountpoint. When set to
#                         true, Calamares will only enforce the listed
#                         restrictions when the user makes a separate partition
#                         for this directory and assigns the mountpoint
#                         accordingly. When set to false, Calamares will
#                         ensure this directory uses the specified filesystem
#                         even if the directory is part of a filesystem on a
#                         different mountpoint. Defaults to false.

# Show/hide LUKS related functionality in automated partitioning modes.
# Disable this if you choose not to deploy early unlocking support in GRUB2
# and/or your distribution's initramfs solution.
#
# BIG FAT WARNING:
#
# This option is unsupported, as it cuts out a crucial security feature.
# Disabling LUKS and shipping Calamares without a correctly configured GRUB2
# and initramfs is considered suboptimal use of the Calamares software. The
# Calamares team will not provide user support for any potential issue that
# may arise as a consequence of setting this option to false.
# It is strongly recommended that system integrators put in the work to support
# LUKS unlocking support in GRUB2 and initramfs/dracut/mkinitcpio/etc.
# For more information on setting up GRUB2 for Calamares with LUKS, see
# https://github.com/calamares/calamares/wiki/Deploy-LUKS
#
# If nothing is specified, LUKS is enabled in automated modes.
#enableLuksAutomatedPartitioning:    true

# When enableLuksAutomatedPartitioning is true, this option will pre-check
# encryption checkbox. This option is only usefull to help people to not forget
# to cypher their disk when installing in enterprise (for exemple).
#preCheckEncryption:    false

# LVM support
#
# # There is only one sub-key available, *enable* (defaults to true)
# # which can be used to show (default) or hide the LVM buttons in the partitioning module.
# lvm:
#     enable: true

# Partition layout.
#
# This optional setting specifies a custom partition layout.
#
# If nothing is specified, the default partition layout is a single partition
# for root that uses 100% of the space and uses the filesystem defined by
# defaultFileSystemType.
#
# Note: the EFI system partition is prepended automatically to the layout if
# needed; the swap partition is appended to the layout if enabled (selections
# "small" or "suspend" in *userSwapChoices*).
#
# Otherwise, the partition layout is defined as follow:
#
# partitionLayout:
#     - name: "rootfs"
#       type: "4f68bce3-e8cd-4db1-96e7-fbcaf984b709"
#       filesystem: "ext4"
#       noEncrypt: false
#       mountPoint: "/"
#       size: 20%
#       minSize: 500M
#       maxSize: 10G
#       attributes: 0xffff000000000003
#     - name: "home"
#       type: "933ac7e1-2eb4-4f13-b844-0e14e2aef915"
#       filesystem: "ext4"
#       noEncrypt: false
#       mountPoint: "/home"
#       size: 3G
#       minSize: 1.5G
#       features:
#         64bit: false
#         casefold: true
#     - name: "data"
#       filesystem: "fat32"
#       mountPoint: "/data"
#       features:
#         sector-size: 4096
#         sectors-per-cluster: 128
#       size: 100%
#
# There can be any number of partitions, each entry having the following attributes:
#   - name: filesystem label
#           and
#           partition name (gpt only; since KPMCore 4.2.0)
#   - uuid: partition uuid (optional parameter; gpt only; requires KPMCore >= 4.2.0)
#   - type: partition type (optional parameter; gpt only; requires KPMCore >= 4.2.0)
#   - attributes: partition attributes (optional parameter; gpt only; requires KPMCore >= 4.2.0)
#   - filesystem: filesystem type (optional parameter)
#       - if not set at all, treat as "unformatted"
#       - if "unformatted", no filesystem will be created
#       - if "unknown" (or an unknown FS name, like "elephant") then the
#         default filesystem type, or the user's choice, will be applied instead
#         of "unknown" (e.g. the user might pick ext4, or xfs).
#   - noEncrypt: whether this partition is exempt from encryption if enabled (optional parameter; default is false)
#   - mountPoint: partition mount point (optional parameter; not mounted if unset)
#   - size: partition size in bytes (append 'K', 'M' or 'G' for KiB, MiB or GiB)
#           or
#           % of the available drive space if a '%' is appended to the value
#   - minSize: minimum partition size (optional parameter)
#   - maxSize: maximum partition size (optional parameter)
#   - features: filesystem features (optional parameter; requires KPMCore >= 4.2.0)
#       name: boolean or integer or string

# Checking for available storage
#
# This overlaps with the setting of the same name in the welcome module's
# requirements section. If nothing is set by the welcome module, this
# value is used instead. It is still a problem if there is no required
# size set at all, and the replace and resize options will not be offered
# if no required size is set.
#
# The value is in Gibibytes (GiB).
#
# BIG FAT WARNING: except for OEM-phase-0 use, you should be using
#                  the welcome module, **and** configure this value in
#                  `welcome.conf`, not here.
# requiredStorage: 3.5
